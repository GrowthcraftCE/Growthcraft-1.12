buildscript {
    repositories {
        mavenCentral()
        //jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net"
        }
    }
    dependencies {
        classpath("com.anatawa12.forge:ForgeGradle:2.3-1.0.+") {
            changing = true
        }
    }
}

repositories {
    /*maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }*/
    maven { // CraftTweaker
        name 'jared maven'
        url "http://maven.blamejared.com/"
    }
    maven { // TOP
        name 'tterrag maven'
        url "http://maven.tterrag.com/"
    }
    /*maven { // compatlayer
        name 'K-4u maven'
        url "http://maven.k-4u.nl/"
    }*/
    maven {
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    /*maven {
        name 'forge'
        url 'https://maven.minecraftforge.net'
    }
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
    maven {
        name "AppleCore"
        url "http://www.ryanliptak.com/maven/"
    }
    maven {
        name "IC2 Forestry"
        url "http://maven.ic2.player.to/"
    }*/
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
    maven {
        name = "CurseMaven"
        url = "https://cursemaven.com"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

ext.configFile = file "gradle.properties"
configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

def getArtifactVersion() {
    def branch = ""
    def revision = ""

    def procGitBranch = "git rev-parse --abbrev-ref HEAD".execute()
    procGitBranch.waitFor()
    if ( procGitBranch.exitValue() == 0 ) {
        branch = procGitBranch.text.trim()
    } else {
        branch = "ERROR"
    }

    def procGitRevisionNum = "git rev-parse --short HEAD".execute()
    procGitRevisionNum.waitFor()
    if ( procGitRevisionNum.exitValue() == 0 ) {
        revision = procGitRevisionNum.text.trim()
    } else {
        revision = ""
    }

    if ( branch == "master" ) {
        revision
    } else if ( branch == "development" ) {
        "BETA-" + revision
    } else {
        "SNAPSHOT-" + revision
    }
}

version = project.property('minecraft_version') + "-" + project.property('mod_version') + "-" + getArtifactVersion()
group = "growthcraft"
archivesBaseName = "growthcraft"

extractAnnotationsJar.doFirst {
    sourceSets.main.output.resourcesDir.listFiles().each {
        System.out.println('Resources: ' + it.absolutePath)
    }
    sourceSets.main.output.classesDir.listFiles().each {
        System.out.println('Classes: ' + it.absolutePath)
    }
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
compileJava {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    mappings = "stable_39"
    //makeObfSourceJar = false
}

jar.manifest {
    attributes 'FMLAT': 'growthcraft_at.cfg'
}

dependencies {
    compile "mcjty.theoneprobe:TheOneProbe-1.12:" + project.property('theoneprobe_version')

    deobfProvided "mezz.jei:jei_" + project.property('minecraft_version') + ":" + project.property('jei_version') + ":api"

    compile "curse.maven:rustic-256141:3107974"
    compile "thaumcraft:Thaumcraft:" + project.property('minecraft_version') + ":" + project.property('thaumcraft_version')
    compile "curse.maven:hwyla-253449:2568751"
    compile "curse.maven:baubles-227083:2518667"
    compile "curse.maven:crafttweaker-239197:5013567"

    runtime "mezz.jei:jei_" + project.property('minecraft_version') + ":" + project.property('jei_version')
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
}

sourceSets { sourceSets -> main }
